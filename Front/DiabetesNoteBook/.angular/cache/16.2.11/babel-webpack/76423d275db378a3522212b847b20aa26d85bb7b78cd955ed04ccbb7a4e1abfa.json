{"ast":null,"code":"import { environment } from '../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthServiceService {\n  constructor(http) {\n    this.http = http;\n    this.API_URL = environment.apiUrl;\n  }\n  registerUser(datoRegistro) {\n    return this.http.post(`${this.API_URL}/Users/registro`, datoRegistro);\n  }\n  static #_ = this.ɵfac = function AuthServiceService_Factory(t) {\n    return new (t || AuthServiceService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthServiceService,\n    factory: AuthServiceService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","AuthServiceService","constructor","http","API_URL","apiUrl","registerUser","datoRegistro","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\PC\\Desktop\\Curso\\Grupo1_ProyectoFinal\\Front\\DiabetesNoteBook\\src\\app\\services\\auth-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { IRegister } from '../register/interfaces/register.interface';\nimport { Observable } from 'rxjs';\nimport { IFinalRegister } from '../register/interfaces/finalregister.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthServiceService {\n\n  private API_URL = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n\n  registerUser(datoRegistro: IFinalRegister) : Observable<IFinalRegister> {\n    return this.http.post<IFinalRegister>(`${this.API_URL}/Users/registro`, datoRegistro);\n  }\n\n}\n\n\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;;;AAQzD,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;EAEG;EAEvCC,YAAYA,CAACC,YAA4B;IACvC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAiB,GAAG,IAAI,CAACJ,OAAO,iBAAiB,EAAEG,YAAY,CAAC;EACvF;EAAC,QAAAE,CAAA,G;qBARUR,kBAAkB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAlBb,kBAAkB;IAAAc,OAAA,EAAlBd,kBAAkB,CAAAe,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}