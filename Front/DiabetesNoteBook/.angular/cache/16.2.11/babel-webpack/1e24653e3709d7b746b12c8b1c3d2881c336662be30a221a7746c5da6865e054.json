{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Sexo, Actividad, TipoDiabetes } from '../../interfaces/register.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class Paso3Component {\n  constructor() {\n    this.registrar = new EventEmitter();\n    this.Sexo = Sexo;\n    this.Actividad = Actividad;\n    this.TipoDiabetes = TipoDiabetes;\n    this.datosRegistro = {\n      avatar: 'avatarTest',\n      username: '',\n      nombre: '',\n      apellido: '',\n      apellido2: '',\n      email: '',\n      password: '',\n      mediciones: {\n        edad: 0,\n        peso: 0,\n        altura: 0,\n        sexo: this.Sexo.hombre,\n        actividad: this.Actividad.sedentario,\n        tipoDiabetes: {\n          tipo: this.TipoDiabetes.tipo1,\n          medicacion: \"\",\n          insulina: false\n        }\n      }\n    };\n    this.registroFinal = {\n      avatar: '',\n      userName: '',\n      email: '',\n      password: '',\n      nombre: '',\n      primerApellido: '',\n      segundoApellido: '',\n      sexo: '',\n      edad: 0,\n      peso: 0,\n      altura: 0,\n      actividad: '',\n      tipoDiabetes: '',\n      medicacion: '',\n      insulina: false\n    };\n  }\n  registroUsuario() {\n    this.registroFinal = {\n      avatar: this.datosRegistro.avatar,\n      userName: this.datosRegistro.username,\n      email: this.datosRegistro.email,\n      password: this.datosRegistro.password,\n      nombre: this.datosRegistro.nombre,\n      primerApellido: this.datosRegistro.apellido,\n      segundoApellido: this.datosRegistro.apellido2,\n      sexo: this.datosRegistro.mediciones.sexo,\n      edad: this.datosRegistro.mediciones.edad,\n      peso: this.datosRegistro.mediciones.peso,\n      altura: this.datosRegistro.mediciones.altura,\n      actividad: this.datosRegistro.mediciones.actividad,\n      tipoDiabetes: this.datosRegistro.mediciones.tipoDiabetes.tipo,\n      medicacion: this.datosRegistro.mediciones.tipoDiabetes.medicacion,\n      insulina: this.datosRegistro.mediciones.tipoDiabetes.insulina\n    };\n    this.registrar.emit(this.registroFinal);\n    console.log(\"registro mandado\", this.registroFinal);\n  }\n  formularioInvalido() {\n    return !this.datosRegistro.mediciones.edad || !this.datosRegistro.mediciones.peso || !this.datosRegistro.mediciones.altura;\n  }\n  static #_ = this.ɵfac = function Paso3Component_Factory(t) {\n    return new (t || Paso3Component)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Paso3Component,\n    selectors: [[\"register-paso3\"]],\n    inputs: {\n      datosRegistro: \"datosRegistro\"\n    },\n    outputs: {\n      registrar: \"registrar\"\n    },\n    decls: 21,\n    vars: 6,\n    consts: [[1, \"form\", 3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"tipo\"], [\"name\", \"tipo\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [\"for\", \"medicacion\"], [\"type\", \"text\", \"name\", \"medicacion\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"insulina\"], [\"type\", \"checkbox\", \"name\", \"insulina\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function Paso3Component_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function Paso3Component_Template_form_ngSubmit_0_listener() {\n          return ctx.registroUsuario();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Tipo de diabetes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function Paso3Component_Template_select_ngModelChange_4_listener($event) {\n          return ctx.datosRegistro.mediciones.tipoDiabetes.tipo = $event;\n        });\n        i0.ɵɵelementStart(5, \"option\", 4);\n        i0.ɵɵtext(6, \"Tipo 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"option\", 4);\n        i0.ɵɵtext(8, \"Tipo 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"option\", 4);\n        i0.ɵɵtext(10, \"Gestacional\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 5);\n        i0.ɵɵtext(13, \"Medicaci\\u00F3n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function Paso3Component_Template_input_ngModelChange_14_listener($event) {\n          return ctx.datosRegistro.mediciones.tipoDiabetes.medicacion = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"\\u00BFToma insulina?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function Paso3Component_Template_input_ngModelChange_18_listener($event) {\n          return ctx.datosRegistro.mediciones.tipoDiabetes.insulina = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(19, \"button\", 9);\n        i0.ɵɵtext(20, \"Completar Registro\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.datosRegistro.mediciones.tipoDiabetes.tipo);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", ctx.TipoDiabetes.tipo1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.TipoDiabetes.tipo2);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.TipoDiabetes.gestacional);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.datosRegistro.mediciones.tipoDiabetes.medicacion);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.datosRegistro.mediciones.tipoDiabetes.insulina);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.CheckboxRequiredValidator, i1.NgModel, i1.NgForm],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","Sexo","Actividad","TipoDiabetes","Paso3Component","constructor","registrar","datosRegistro","avatar","username","nombre","apellido","apellido2","email","password","mediciones","edad","peso","altura","sexo","hombre","actividad","sedentario","tipoDiabetes","tipo","tipo1","medicacion","insulina","registroFinal","userName","primerApellido","segundoApellido","registroUsuario","emit","console","log","formularioInvalido","_","_2","selectors","inputs","outputs","decls","vars","consts","template","Paso3Component_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","Paso3Component_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","Paso3Component_Template_select_ngModelChange_4_listener","$event","Paso3Component_Template_input_ngModelChange_14_listener","Paso3Component_Template_input_ngModelChange_18_listener","ɵɵadvance","ɵɵproperty","tipo2","gestacional"],"sources":["C:\\Users\\PC\\Desktop\\Curso\\Grupo1_ProyectoFinal\\Front\\DiabetesNoteBook\\src\\app\\register\\components\\paso3\\paso3.component.ts","C:\\Users\\PC\\Desktop\\Curso\\Grupo1_ProyectoFinal\\Front\\DiabetesNoteBook\\src\\app\\register\\components\\paso3\\paso3.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IRegister } from '../../interfaces/register.interface';\nimport { Sexo, Actividad, TipoDiabetes } from '../../interfaces/register.enum';\nimport { IFinalRegister } from '../../interfaces/finalregister.interface';\n\n@Component({\n  selector: 'register-paso3',\n  templateUrl: './paso3.component.html',\n  styleUrls: ['./paso3.component.css'],\n})\nexport class Paso3Component {\n  @Output() registrar = new EventEmitter<IFinalRegister>();\n\n  public Sexo = Sexo;\n  public Actividad = Actividad;\n  public TipoDiabetes = TipoDiabetes;\n\n  @Input() datosRegistro: IRegister = {\n    avatar: 'avatarTest',\n    username: '',\n    nombre: '',\n    apellido: '',\n    apellido2: '',\n    email: '',\n    password: '',\n    mediciones: {\n      edad: 0,\n      peso: 0,\n      altura: 0,\n      sexo: this.Sexo.hombre,\n      actividad: this.Actividad.sedentario,\n      tipoDiabetes: {\n        tipo: this.TipoDiabetes.tipo1,\n        medicacion:\"\",\n        insulina: false,\n      },\n    },\n  };\n\n\n  registroFinal: IFinalRegister ={\n    avatar: '',\n    userName: '',\n    email: '',\n    password: '',\n    nombre: '',\n    primerApellido: '',\n    segundoApellido: '',\n    sexo: '',\n    edad: 0,\n    peso: 0,\n    altura: 0,\n    actividad: '',\n    tipoDiabetes: '',\n    medicacion: '',\n    insulina: false\n  }\n\n  registroUsuario() {\n    this.registroFinal ={\n      avatar: this.datosRegistro.avatar,\n      userName: this.datosRegistro.username,\n      email: this.datosRegistro.email,\n      password: this.datosRegistro.password,\n      nombre: this.datosRegistro.nombre,\n      primerApellido: this.datosRegistro.apellido,\n      segundoApellido: this.datosRegistro.apellido2,\n      sexo: this.datosRegistro.mediciones.sexo,\n      edad: this.datosRegistro.mediciones.edad,\n      peso: this.datosRegistro.mediciones.peso,\n      altura: this.datosRegistro.mediciones.altura,\n      actividad: this.datosRegistro.mediciones.actividad,\n      tipoDiabetes: this.datosRegistro.mediciones.tipoDiabetes.tipo,\n      medicacion: this.datosRegistro.mediciones.tipoDiabetes.medicacion,\n      insulina: this.datosRegistro.mediciones.tipoDiabetes.insulina\n    }\n    this.registrar.emit(this.registroFinal);\n    console.log(\"registro mandado\" , this.registroFinal)\n  }\n  formularioInvalido(): boolean {\n    return (\n      !this.datosRegistro.mediciones.edad ||\n      !this.datosRegistro.mediciones.peso ||\n      !this.datosRegistro.mediciones.altura\n    );\n  }\n\n  // separarMedicacion(medicacion: string): void {\n  //   medicacion.split(',');\n  //   this.datosRegistro.mediciones.tipoDiabetes.medicacion.push(medicacion);\n  // }\n\n\n}\n","<form (ngSubmit)=\"registroUsuario()\" class=\"form\">\n  <div class=\"form-group\">\n    <label for=\"tipo\">Tipo de diabetes</label>\n    <select [(ngModel)]=\"datosRegistro.mediciones.tipoDiabetes.tipo\" name=\"tipo\" required class=\"form-control\">\n      <option [value]=\"TipoDiabetes.tipo1\">Tipo 1</option>\n      <option [value]=\"TipoDiabetes.tipo2\">Tipo 2</option>\n      <option [value]=\"TipoDiabetes.gestacional\">Gestacional</option>\n    </select>\n  </div>\n  \n  <div class=\"form-group\">\n    <label for=\"medicacion\">Medicación</label>\n    <input type=\"text\" [(ngModel)]=\"datosRegistro.mediciones.tipoDiabetes.medicacion\" name=\"medicacion\" required\n      class=\"form-control\">\n  </div>\n  <div class=\"form-group\">\n    <label for=\"insulina\">¿Toma insulina?</label>\n    <input type=\"checkbox\" [(ngModel)]=\"datosRegistro.mediciones.tipoDiabetes.insulina\" name=\"insulina\" required>\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Completar Registro</button>\n</form>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}